version: "3.9"


services:
  db:
    container_name: postgres_db
    image: postgres:15.1-alpine
    restart: always
    env_file:
      - .env
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - ${DB_PORT:-5432}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5

  cache:
    container_name: redis_cache
    image: redis
    restart: always
    ports:
      - ${REDIS_PORT:-6379}:6379
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    restart: always
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10

  worker:
    container_name: celery_worker
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: bash -c "celery -A src.celery.app worker -B -l info"
    volumes:
      - ./admin:/app/admin
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: celery -A src.celery.app status
      interval: 30s
      timeout: 30s
      retries: 2

  flower:
    container_name: flower
    restart: on-failure
    image: mher/flower
    env_file:
      - .env
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}//
    depends_on:
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_healthy

  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    volumes:
      - ./:/app
    ports:
      - ${API_PORT:-8000}:8000
    command: bash -c "alembic upgrade head &&
      uvicorn src.main:app --reload --host ${API_HOST} --port ${API_PORT}"
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started

volumes:
  postgres-data:
